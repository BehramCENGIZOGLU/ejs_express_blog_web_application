// import iÅŸlemleri yapÄ±ldÄ±.
import express from "express";
import bodyParser from "body-parser";

// get, post, listen iÅŸlemleri iÃ§in app deÄŸiÅŸkenine express modÃ¼lÃ¼ atandÄ±.
const app = express(); 

// port deÄŸiÅŸkenine 3000 atandÄ±.
const port = 3000;

// boÅŸ bir dizi ayarlandÄ±.
let posts=[];

// posts adÄ±nda title ve content deÄŸerleri alan bir fonksiyon tanÄ±mlandÄ±.
// bu fonksiyon iÃ§erisinde title, content, date deÄŸerleri tutuluyor. 
function Posts(title,content){
    this.title=title,
    this.content=content,
    this.rawDate = new Date();
    this.date = this.rawDate.toLocaleString();
}

// addPost adÄ±nda bir fonksiyon oluÅŸturuldu.
// amacÄ± post adÄ±nda ki deÄŸiÅŸkene posts fonksiyonunu Ã§aÄŸÄ±rarak tiitle ve content iÃ§eriÄŸini eklemek.
// daha sonra post deÄŸiÅŸkenine eklenen veriler posts dizine push edildi.
function addPost(title,content){
    let post = new Posts(title,content);
    posts.push(post);
}

// deletePost adÄ±nda bir fonksiyon oluÅŸturuldu bu sayede seÃ§ilen post'un silinmesi saÄŸlandÄ±.
function deletePost(index){
    posts.splice(index,1);
}

// editPost adÄ±nda seÃ§ilen post'un dÃ¼zenlenmesi iÃ§in posts fonksiyonu Ã§aÄŸÄ±rÄ±ldÄ±.
// burada amaÃ§ seÃ§ilen postun Ã¶nceki bilgilerinin Ã¼zerine bilgiler yazmak bu sayede en son yazÄ±lan bilgiler kalacaktÄ±r.
function editPost(index, title, content){
    posts[index] = new Posts(title, content);
}

// public klasÃ¶rÃ¼ iÃ§inde ki dosyalara tarayÄ±cÄ±dan eriÅŸilebilmesi saÄŸlandÄ±.
app.use(express.static("public"));

// formdan gelen verilerin ayrÄ± ayrÄ± alÄ±nabilmesi saÄŸlandÄ±.
app.use(bodyParser.urlencoded({extended:true}));

// ana sayfa ayarlandÄ±.
// posts iÃ§erisinde ki bilgiler home.ejs kÄ±smÄ±na aktarÄ±ldÄ±.
app.get("/",(req,res) => {
    res.render("home.ejs",{posts:posts});
});

app.get("/create", (req,res) => {
    res.render("create.ejs");
});

// id'si seÃ§ilen post'un verileri view kÄ±smÄ±nda gÃ¶sterildi. Ã–rn : localhost:3000/view/0 gibi
app.get("/view/:id",(req,res) => {
    let index = req.params.id;
    let post = posts[index];
    res.render("view.ejs",{postId:index, title:post.title, content:post.content});
});

// seÃ§ili olan postun gÃ¼ncellenebilmesi iÃ§in Ã¶nceden yazÄ±lÄ± olan bilgiler Ã§ekilip create.ejs kÄ±smÄ±na gÃ¶nderildi.
app.get("/edit/:id",(req,res) => {
    let index = req.params.id;
    let post = posts[index];
    res.render("create.ejs", {postId:index, title:post.title, content:post.content});
});

// seÃ§ili olan post'un silinme iÅŸlemi gerÃ§ekleÅŸtirildi.
app.post("/delete",(req,res) => {
    let index = req.body["postId"];
    deletePost(index);
    res.redirect("/");
});

// seÃ§ili olan postun index, title, content bilgileri alÄ±nÄ±p editPost fonksiyonuna iletildi.
// bÃ¶ylece yeni veriler eski verilerin Ã¼zerine iÅŸlenmiÅŸ oldu.
app.post("/update",(req,res) => {
    let index = req.body.postId;
    let title = req.body.title;
    let content = req.body.content;
    editPost(index, title, content);
    res.redirect("/");
});

// create.ejs sayfasÄ±nda title ve content bilgileri girildikten sonra kaydedilme iÅŸlemi yapÄ±ldÄ±.
app.post("/save", (req,res) => {
    let title = req.body.title;
    let content = req.body.content;
    addPost(title,content);
    res.redirect("/");
});

// local'de 3000 numaralÄ± portun dinlenmesi saÄŸlandÄ±.
// baÅŸlangÄ±Ã§ta sabit olarak 2 post gÃ¶sterildi. 
app.listen(port, () => {
    addPost("I Tried to Impress my Date with my Culinary Skills, and I Burned Water", "Hey fellow foodies, gather 'round for a tale of culinary calamity that would make Gordon Ramsay shed a tear.\nSo, picture this: a romantic dinner date with my crush, a beautifully set table, candles, and soft music playing in the background. I decided to take charge of the kitchen and show off my alleged culinary skills, thinking I'd impress my date with a homemade meal. What could go wrong, right?\nAs we embarked on this culinary adventure, I decided to start with something easy - boiling water for pasta. Sounds foolproof, doesn't it?\nBut it turns out, I have a knack for defying the odds.")
    addPost("I Pretended to Be a Penguin on a Job Interview - Now I'm the New Zoo Attraction", "Hello, my adoring fans! Allow me to regale you with the audacious tale of how my penguin impersonation turned me into the zoo's most celebrated attraction.\nOne day, in a moment of pure genius, I transformed into the charismatic Penguin Pretender. I walked into the zoo, flaunting my exceptional penguin moves, honks, and all. The interview panel was dumbstruck, offering me a job right then and there.\nFast forward to today, I'm the star of the show! My skills as the dazzling Penguin Pretender are unrivaled, drawing crowds from all over. I have a VIP enclosure, a daily 'Penguin Spectacle,' and a fervent fan following.\nMy message to you? Dare to be extraordinary, and let your talents shine.")
    console.log(`Breaking News: Our app is all ears at Port ${port}, ready to boogie to the sweet sounds of data! ðŸŽµðŸ•ºðŸ˜„`)
})
